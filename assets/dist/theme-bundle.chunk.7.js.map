{"version":3,"sources":["webpack:///./assets/js/theme/auth.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/capitalize.js","webpack:///./node_modules/lodash/includes.js","webpack:///./node_modules/core-js/modules/es6.regexp.match.js","webpack:///./node_modules/lodash/_hasUnicode.js","webpack:///./node_modules/lodash/camelCase.js","webpack:///./node_modules/core-js/modules/es6.regexp.constructor.js","webpack:///./node_modules/lodash/_baseIndexOf.js","webpack:///./node_modules/lodash/upperFirst.js","webpack:///./node_modules/lodash/_createCaseFirst.js","webpack:///./node_modules/lodash/_castSlice.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_stringToArray.js","webpack:///./node_modules/lodash/_asciiToArray.js","webpack:///./node_modules/lodash/_unicodeToArray.js","webpack:///./node_modules/lodash/_createCompounder.js","webpack:///./node_modules/lodash/_arrayReduce.js","webpack:///./node_modules/lodash/deburr.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/words.js","webpack:///./node_modules/lodash/_asciiWords.js","webpack:///./node_modules/lodash/_hasUnicodeWord.js","webpack:///./node_modules/lodash/_unicodeWords.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./assets/js/theme/common/state-country.js","webpack:///./node_modules/lodash/each.js","webpack:///./node_modules/lodash/transform.js","webpack:///./assets/js/theme/common/form-validation.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js"],"names":["Auth","context","formCreateSelector","registerLoginValidation","$loginForm","loginModel","forms","this","loginValidator","nod","submit","add","selector","validate","cb","val","email","errorMessage","useValidEmail","password","enterPass","on","event","performCheck","areAll","preventDefault","registerForgotPasswordValidation","$forgotPasswordForm","forgotPasswordValidator","registerNewPasswordValidation","newPasswordValidator","$","newPasswordForm","passwordSelector","password2Selector","Validators","setPasswordValidation","passwordRequirements","registerCreateAccountValidator","$createAccountForm","$last","validationModel","validation","createAccountValidator","$stateElement","emailSelector","$emailElement","$passwordElement","$password2Element","stateCountry","err","field","Error","$field","getStatus","remove","is","setStateCountryValidation","cleanUpStateValidation","setEmailValidation","onReady","classifyForm","$newPasswordForm","length","PageManager","value","test","notEmpty","inputTagNames","formSelector","options","$form","$inputs","find","join","formFieldClass","each","__","input","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","addClass","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","type","name","fieldId","match","getFieldId","after","validator","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","$fieldClassElement","data","Object","keys","classes","forEach","hasClass","removeClass","module","exports","toString","upperFirst","string","baseIndexOf","array","anObject","toLength","advanceStringIndex","regExpExec","defined","MATCH","$match","maybeCallNative","regexp","O","fn","undefined","call","String","res","done","rx","S","global","fullUnicode","unicode","lastIndex","A","n","matchStr","reHasUnicode","capitalize","camelCase","createCompounder","word","index","inheritIfRequired","dP","f","gOPN","isRegExp","$flags","$RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","tiRE","piRE","fiU","constructor","source","proxy","key","configurable","get","set","it","i","fromIndex","createCaseFirst","castSlice","hasUnicode","stringToArray","methodName","strSymbols","chr","charAt","trailing","slice","baseSlice","start","end","Array","asciiToArray","unicodeToArray","split","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","arrayReduce","deburr","words","reApos","callback","replace","iteratee","accumulator","initAccum","baseToString","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard","reAsciiWord","reHasUnicodeWord","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsUpper","rsMiscLower","rsMiscUpper","rsModifier","rsEmoji","reUnicodeWord","stateElement","countryName","currentTarget","utils","api","country","getByName","response","showAlertModal","state_error","$currentInput","states","newElement","attrs","item","ret","replacementAttributes","id","class","replaceWith","$newElement","prev","hide","makeStateOptional","$selectElement","$hiddenInput","append","required","show","makeStateRequired","statesArray","container","push","prefix","stateObj","useIdForStates","html","addOptions","arrayEach","baseCreate","baseForOwn","baseIteratee","getPrototype","isArray","isBuffer","isFunction","isObject","isTypedArray","object","isArr","isArrLike","Ctor","buildValidation","$validateableElement","fieldValidations","formFieldSelector","attr","dateValidation","min_date","max_date","invalidMessage","formElementId","minSplit","maxSplit","minDate","Date","maxDate","triggeredBy","day","Number","month","year","chosenDate","buildDateValidation","element","$inputElement","inputName","elementSelector","label","min","max","numberVal","buildNumberRangeValidation","buildRequiredValidation","formFieldId","secondarySelector","checkbox","checked","buildRequiredCheckboxValidation","validationsToPerform","concat","baseFor","createBaseFor","fromRight","keysFunc","iterable","props"],"mappings":"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","file":"theme-bundle.chunk.7.js","sourcesContent":["import PageManager from './page-manager';\nimport stateCountry from './common/state-country';\nimport nod from './common/nod';\nimport validation from './common/form-validation';\nimport forms from './common/models/forms';\nimport { classifyForm, Validators } from './common/form-utils';\n\nexport default class Auth extends PageManager {\n    constructor(context) {\n        super(context);\n        this.formCreateSelector = 'form[data-create-account-form]';\n    }\n\n    registerLoginValidation($loginForm) {\n        const loginModel = forms;\n\n        this.loginValidator = nod({\n            submit: '.login-form input[type=\"submit\"]',\n        });\n\n        this.loginValidator.add([\n            {\n                selector: '.login-form input[name=\"login_email\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n            {\n                selector: '.login-form input[name=\"login_pass\"]',\n                validate: (cb, val) => {\n                    const result = loginModel.password(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.enterPass,\n            },\n        ]);\n\n        $loginForm.on('submit', event => {\n            this.loginValidator.performCheck();\n\n            if (this.loginValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerForgotPasswordValidation($forgotPasswordForm) {\n        this.forgotPasswordValidator = nod({\n            submit: '.forgot-password-form input[type=\"submit\"]',\n        });\n\n        this.forgotPasswordValidator.add([\n            {\n                selector: '.forgot-password-form input[name=\"email\"]',\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: this.context.useValidEmail,\n            },\n        ]);\n\n        $forgotPasswordForm.on('submit', event => {\n            this.forgotPasswordValidator.performCheck();\n\n            if (this.forgotPasswordValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    registerNewPasswordValidation() {\n        const newPasswordForm = '.new-password-form';\n        const newPasswordValidator = nod({\n            submit: $(`${newPasswordForm} input[type=\"submit\"]`),\n        });\n        const passwordSelector = $(`${newPasswordForm} input[name=\"password\"]`);\n        const password2Selector = $(`${newPasswordForm} input[name=\"password_confirm\"]`);\n\n        Validators.setPasswordValidation(\n            newPasswordValidator,\n            passwordSelector,\n            password2Selector,\n            this.passwordRequirements,\n        );\n    }\n\n    registerCreateAccountValidator($createAccountForm) {\n        const validationModel = validation($createAccountForm);\n        const createAccountValidator = nod({\n            submit: `${this.formCreateSelector} input[type='submit']`,\n        });\n        const $stateElement = $('[data-field-type=\"State\"]');\n        const emailSelector = `${this.formCreateSelector} [data-field-type='EmailAddress']`;\n        const $emailElement = $(emailSelector);\n        const passwordSelector = `${this.formCreateSelector} [data-field-type='Password']`;\n        const $passwordElement = $(passwordSelector);\n        const password2Selector = `${this.formCreateSelector} [data-field-type='ConfirmPassword']`;\n        const $password2Element = $(password2Selector);\n\n        createAccountValidator.add(validationModel);\n\n        if ($stateElement) {\n            let $last;\n\n            // Requests the states for a country with AJAX\n            stateCountry($stateElement, this.context, (err, field) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                const $field = $(field);\n\n                if (createAccountValidator.getStatus($stateElement) !== 'undefined') {\n                    createAccountValidator.remove($stateElement);\n                }\n\n                if ($last) {\n                    createAccountValidator.remove($last);\n                }\n\n                if ($field.is('select')) {\n                    $last = field;\n                    Validators.setStateCountryValidation(createAccountValidator, field);\n                } else {\n                    Validators.cleanUpStateValidation(field);\n                }\n            });\n        }\n\n        if ($emailElement) {\n            createAccountValidator.remove(emailSelector);\n            Validators.setEmailValidation(createAccountValidator, emailSelector);\n        }\n\n        if ($passwordElement && $password2Element) {\n            createAccountValidator.remove(passwordSelector);\n            createAccountValidator.remove(password2Selector);\n            Validators.setPasswordValidation(\n                createAccountValidator,\n                passwordSelector,\n                password2Selector,\n                this.passwordRequirements,\n            );\n        }\n\n        $createAccountForm.on('submit', event => {\n            createAccountValidator.performCheck();\n\n            if (createAccountValidator.areAll('valid')) {\n                return;\n            }\n\n            event.preventDefault();\n        });\n    }\n\n    /**\n     * Request is made in this function to the remote endpoint and pulls back the states for country.\n     */\n    onReady() {\n        const $createAccountForm = classifyForm(this.formCreateSelector);\n        const $loginForm = classifyForm('.login-form');\n        const $forgotPasswordForm = classifyForm('.forgot-password-form');\n        const $newPasswordForm = classifyForm('.new-password-form'); // reset password\n\n        // Injected via auth.html\n        this.passwordRequirements = this.context.passwordRequirements;\n\n        if ($loginForm.length) {\n            this.registerLoginValidation($loginForm);\n        }\n\n        if ($newPasswordForm.length) {\n            this.registerNewPasswordValidation();\n        }\n\n        if ($forgotPasswordForm.length) {\n            this.registerForgotPasswordValidation($forgotPasswordForm);\n        }\n\n        if ($createAccountForm.length) {\n            this.registerCreateAccountValidator($createAccountForm);\n        }\n    }\n}\n","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","'use strict';\n\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar advanceStringIndex = require('./_advance-string-index');\nvar regExpExec = require('./_regexp-exec-abstract');\n\n// @@match logic\nrequire('./_fix-re-wks')('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n","var capitalize = require('./capitalize'),\n    createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nmodule.exports = camelCase;\n","var global = require('./_global');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar dP = require('./_object-dp').f;\nvar gOPN = require('./_object-gopn').f;\nvar isRegExp = require('./_is-regexp');\nvar $flags = require('./_flags');\nvar $RegExp = global.RegExp;\nvar Base = $RegExp;\nvar proto = $RegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n// \"new\" creates a new object, old webkit buggy here\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\n  re2[require('./_wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))) {\n  $RegExp = function RegExp(p, f) {\n    var tiRE = this instanceof $RegExp;\n    var piRE = isRegExp(p);\n    var fiU = f === undefined;\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\n      : inheritIfRequired(CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\n      , tiRE ? this : proto, $RegExp);\n  };\n  var proxy = function (key) {\n    key in $RegExp || dP($RegExp, key, {\n      configurable: true,\n      get: function () { return Base[key]; },\n      set: function (it) { Base[key] = it; }\n    });\n  };\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./_redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./_set-species')('RegExp');\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n","var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n","var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n","/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","import utils from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport { insertStateHiddenField } from './form-utils';\nimport { showAlertModal } from '../global/modal';\n\n/**\n * If there are no options from bcapp, a text field will be sent. This will create a select element to hold options after the remote request.\n * @returns {jQuery|HTMLElement}\n */\nfunction makeStateRequired(stateElement, context) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n        return ret;\n    });\n\n    const replacementAttributes = {\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-select',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<select></select>', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n    const $hiddenInput = $('[name*=\"FormFieldIsText\"]');\n\n    if ($hiddenInput.length !== 0) {\n        $hiddenInput.remove();\n    }\n\n    if ($newElement.prev().find('small').length === 0) {\n        // String is injected from localizer\n        $newElement.prev().append(`<small>${context.required}</small>`);\n    } else {\n        $newElement.prev().find('small').show();\n    }\n\n    return $newElement;\n}\n\n/**\n * If a country with states is the default, a select will be sent,\n * In this case we need to be able to switch to an input field and hide the required field\n */\nfunction makeStateOptional(stateElement) {\n    const attrs = _.transform(stateElement.prop('attributes'), (result, item) => {\n        const ret = result;\n        ret[item.name] = item.value;\n\n        return ret;\n    });\n\n    const replacementAttributes = {\n        type: 'text',\n        id: attrs.id,\n        'data-label': attrs['data-label'],\n        class: 'form-input',\n        name: attrs.name,\n        'data-field-type': attrs['data-field-type'],\n    };\n\n    stateElement.replaceWith($('<input />', replacementAttributes));\n\n    const $newElement = $('[data-field-type=\"State\"]');\n\n    if ($newElement.length !== 0) {\n        insertStateHiddenField($newElement);\n        $newElement.prev().find('small').hide();\n    }\n\n    return $newElement;\n}\n\n/**\n * Adds the array of options from the remote request to the newly created select box.\n * @param {Object} statesArray\n * @param {jQuery} $selectElement\n * @param {Object} options\n */\nfunction addOptions(statesArray, $selectElement, options) {\n    const container = [];\n\n    container.push(`<option value=\"\">${statesArray.prefix}</option>`);\n\n    if (!_.isEmpty($selectElement)) {\n        _.each(statesArray.states, (stateObj) => {\n            if (options.useIdForStates) {\n                container.push(`<option value=\"${stateObj.id}\">${stateObj.name}</option>`);\n            } else {\n                container.push(`<option value=\"${stateObj.name}\">${stateObj.name}</option>`);\n            }\n        });\n\n        $selectElement.html(container.join(' '));\n    }\n}\n\n/**\n *\n * @param {jQuery} stateElement\n * @param {Object} context\n * @param {Object} options\n * @param {Function} callback\n */\nexport default function (stateElement, context = {}, options, callback) {\n    /**\n     * Backwards compatible for three parameters instead of four\n     *\n     * Available options:\n     *\n     * useIdForStates {Bool} - Generates states dropdown using id for values instead of strings\n     */\n    if (typeof options === 'function') {\n        /* eslint-disable no-param-reassign */\n        callback = options;\n        options = {};\n        /* eslint-enable no-param-reassign */\n    }\n\n    $('select[data-field-type=\"Country\"]').on('change', event => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                showAlertModal(context.state_error);\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    });\n}\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n","/**\n * Validate that the given date for the day/month/year select inputs is within potential range\n * @param $formField\n * @param validation\n * @returns {{selector: string, triggeredBy: string, validate: Function, errorMessage: string}}\n */\nfunction buildDateValidation($formField, validation) {\n    // No date range restriction, skip\n    if (validation.min_date && validation.max_date) {\n        const invalidMessage = `Your chosen date must fall between ${validation.min_date} and ${validation.max_date}.`;\n        const formElementId = $formField.attr('id');\n        const minSplit = validation.min_date.split('-');\n        const maxSplit = validation.max_date.split('-');\n        const minDate = new Date(minSplit[0], minSplit[1] - 1, minSplit[2]);\n        const maxDate = new Date(maxSplit[0], maxSplit[1] - 1, maxSplit[2]);\n\n        return {\n            selector: `#${formElementId} select[data-label=\"year\"]`,\n            triggeredBy: `#${formElementId} select:not([data-label=\"year\"])`,\n            validate: (cb, val) => {\n                const day = Number($formField.find('select[data-label=\"day\"]').val());\n                const month = Number($formField.find('select[data-label=\"month\"]').val()) - 1;\n                const year = Number(val);\n                const chosenDate = new Date(year, month, day);\n\n                cb(chosenDate >= minDate && chosenDate <= maxDate);\n            },\n            errorMessage: invalidMessage,\n        };\n    }\n}\n\n/**\n * We validate checkboxes separately from single input fields, as they must have at least one checked option\n * from many different inputs\n * @param $formField\n * @param validation\n */\nfunction buildRequiredCheckboxValidation($formField, validation) {\n    const formFieldId = $formField.attr('id');\n    const primarySelector = `#${formFieldId} input:first-of-type`;\n    const secondarySelector = `#${formFieldId} input`;\n\n    return {\n        selector: primarySelector,\n        triggeredBy: secondarySelector,\n        validate: (cb) => {\n            let result = false;\n\n            $(secondarySelector).each((index, checkbox) => {\n                if (checkbox.checked) {\n                    result = true;\n\n                    return false;\n                }\n            });\n\n            cb(result);\n        },\n        errorMessage: `The '${validation.label}' field cannot be blank.`,\n    };\n}\n\nfunction buildRequiredValidation(validation, selector) {\n    return {\n        selector,\n        validate(cb, val) {\n            cb(val.length > 0);\n        },\n        errorMessage: `The '${validation.label}' field cannot be blank.`,\n    };\n}\n\nfunction buildNumberRangeValidation(validation, formFieldSelector) {\n    const invalidMessage = `The value for ${validation.label} must be between ${validation.min} and ${validation.max}.`;\n    const min = Number(validation.min);\n    const max = Number(validation.max);\n\n    return {\n        selector: `${formFieldSelector} input[name=\"${validation.name}\"]`,\n        validate: (cb, val) => {\n            const numberVal = Number(val);\n\n            cb(numberVal >= min && numberVal <= max);\n        },\n        errorMessage: invalidMessage,\n    };\n}\n\n\nfunction buildValidation($validateableElement) {\n    const validation = $validateableElement.data('validation');\n    const fieldValidations = [];\n    const formFieldSelector = `#${$validateableElement.attr('id')}`;\n\n    if (validation.type === 'datechooser') {\n        const dateValidation = buildDateValidation($validateableElement, validation);\n\n        if (dateValidation) {\n            fieldValidations.push(dateValidation);\n        }\n    } else if (validation.required && (validation.type === 'checkboxselect' || validation.type === 'radioselect')) {\n        fieldValidations.push(buildRequiredCheckboxValidation($validateableElement, validation));\n    } else {\n        $validateableElement.find('input, select, textarea').each((index, element) => {\n            const $inputElement = $(element);\n            const tagName = $inputElement.get(0).tagName;\n            const inputName = $inputElement.attr('name');\n            const elementSelector = `${formFieldSelector} ${tagName}[name=\"${inputName}\"]`;\n\n            if (validation.type === 'numberonly') {\n                fieldValidations.push(buildNumberRangeValidation(validation, formFieldSelector));\n            }\n            if (validation.required) {\n                fieldValidations.push(buildRequiredValidation(validation, elementSelector));\n            }\n        });\n    }\n\n    return fieldValidations;\n}\n\n/**\n * Builds the validation model for dynamic forms\n * @param $form\n * @returns {Array}\n */\nexport default function ($form) {\n    let validationsToPerform = [];\n\n    $form.find('[data-validation]').each((index, input) => {\n        validationsToPerform = validationsToPerform.concat(buildValidation($(input)));\n    });\n\n    return validationsToPerform;\n}\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n"],"sourceRoot":""}