{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./assets/js/theme/common/url-utils.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","formatCategoryTreeForJSTree","node","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","url","urlUtils","replaceParams","window","location","href","section","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","goToUrl","showContent","onReady","compareProducts","context","urls","$searchForm","$categoryTreeContainer","find","Url","parse","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","event","preventDefault","query","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","categoryId","input","type","name","value","append","loadTreeNodes","cb","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","done","formattedResults","dataNode","$container","treeOptions","core","themes","icons","checkbox","three_state","plugins","$searchHeading","$searchCount","requestOptions","template","productListing","sidebar","heading","productCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","forms","email","test","password","notEmpty","inputTagNames","classifyForm","formSelector","options","$inputs","join","formFieldClass","each","__","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","val","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","getUrl","pathname","search","history","pushState","document","title","trigger","params","param","parsed","hasOwnProperty","format","buildQueryString","queryData","key","out","Array","isArray","ndx","substring","updateCounterNav","counter","$link","urlContext","is","attr","compare","products","$checked","$compareLink","element","compareCounter","item","product","currentTarget","$clickedCompareLink","checked","index","indexOf","splice","decrementCounter","showAlertModal","queryParams","serialize","split","page","PageManager","callback","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","collapseAllFacets","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","err","hide","Error","expandFacetItems","$navList","hasMoreResults","toggleFacetItems","getMoreFacetResults","facet","facetUrl","list_all","response","open","updateContent","$items","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","priceRangeValidator","unbindEvents","off","stopPropagation","$toggle","toggleClass","constants","VALID","decodeURI"],"mappings":"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","file":"theme-bundle.chunk.11.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\r\nimport CatalogPage from './catalog';\r\nimport FacetedSearch from './common/faceted-search';\r\nimport compareProducts from './global/compare-products';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\nimport collapsibleFactory from './common/collapsible';\r\nimport 'jstree';\r\nimport nod from './common/nod';\r\n\r\nexport default class Search extends CatalogPage {\r\n    formatCategoryTreeForJSTree(node) {\r\n        const nodeData = {\r\n            text: node.data,\r\n            id: node.metadata.id,\r\n            state: {\r\n                selected: node.selected,\r\n            },\r\n        };\r\n\r\n        if (node.state) {\r\n            nodeData.state.opened = node.state === 'open';\r\n            nodeData.children = true;\r\n        }\r\n\r\n        if (node.children) {\r\n            nodeData.children = [];\r\n            node.children.forEach((childNode) => {\r\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\r\n            });\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n\r\n    showProducts() {\r\n        const url = urlUtils.replaceParams(window.location.href, {\r\n            section: 'product',\r\n        });\r\n\r\n        this.$productListingContainer.removeClass('u-hiddenVisually');\r\n        this.$facetedSearchContainer.removeClass('u-hiddenVisually');\r\n        this.$contentResultsContainer.addClass('u-hiddenVisually');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-content-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action');\r\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    showContent() {\r\n        const url = urlUtils.replaceParams(window.location.href, {\r\n            section: 'content',\r\n        });\r\n\r\n        this.$contentResultsContainer.removeClass('u-hiddenVisually');\r\n        this.$productListingContainer.addClass('u-hiddenVisually');\r\n        this.$facetedSearchContainer.addClass('u-hiddenVisually');\r\n\r\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\r\n        $('[data-product-results-toggle]').addClass('navBar-action');\r\n\r\n        $('[data-content-results-toggle]').removeClass('navBar-action');\r\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\r\n\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onReady() {\r\n        compareProducts(this.context.urls);\r\n\r\n        const $searchForm = $('[data-advanced-search-form]');\r\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\r\n        const url = Url.parse(window.location.href, true);\r\n        const treeData = [];\r\n        this.$productListingContainer = $('#product-listing-container');\r\n        this.$facetedSearchContainer = $('#faceted-search-container');\r\n        this.$contentResultsContainer = $('#search-results-content');\r\n\r\n        // Init faceted search\r\n        if ($('#facetedSearch').length > 0) {\r\n            this.initFacetedSearch();\r\n        } else {\r\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        $('[data-product-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showProducts();\r\n        });\r\n\r\n        $('[data-content-results-toggle]').on('click', event => {\r\n            event.preventDefault();\r\n            this.showContent();\r\n        });\r\n\r\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\r\n            this.showContent();\r\n        } else {\r\n            this.showProducts();\r\n        }\r\n\r\n        const validator = this.initValidation($searchForm)\r\n            .bindValidation($searchForm.find('#search_query_adv'));\r\n\r\n        this.context.categoryTree.forEach((node) => {\r\n            treeData.push(this.formatCategoryTreeForJSTree(node));\r\n        });\r\n\r\n        this.categoryTreeData = treeData;\r\n        this.createCategoryTree($categoryTreeContainer);\r\n\r\n        $searchForm.on('submit', event => {\r\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\r\n\r\n            if (!validator.check()) {\r\n                return event.preventDefault();\r\n            }\r\n\r\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\r\n\r\n            for (const categoryId of selectedCategoryIds) {\r\n                const input = $('<input>', {\r\n                    type: 'hidden',\r\n                    name: 'category[]',\r\n                    value: categoryId,\r\n                });\r\n\r\n                $searchForm.append(input);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadTreeNodes(node, cb) {\r\n        $.ajax({\r\n            url: '/remote/v1/category-tree',\r\n            data: {\r\n                selectedCategoryId: node.id,\r\n                prefix: 'category',\r\n            },\r\n            headers: {\r\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\r\n            },\r\n        }).done(data => {\r\n            const formattedResults = [];\r\n\r\n            data.forEach((dataNode) => {\r\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\r\n            });\r\n\r\n            cb(formattedResults);\r\n        });\r\n    }\r\n\r\n    createCategoryTree($container) {\r\n        const treeOptions = {\r\n            core: {\r\n                data: (node, cb) => {\r\n                    // Root node\r\n                    if (node.id === '#') {\r\n                        cb(this.categoryTreeData);\r\n                    } else {\r\n                        // Lazy loaded children\r\n                        this.loadTreeNodes(node, cb);\r\n                    }\r\n                },\r\n                themes: {\r\n                    icons: true,\r\n                },\r\n            },\r\n            checkbox: {\r\n                three_state: false,\r\n            },\r\n            plugins: [\r\n                'checkbox',\r\n            ],\r\n        };\r\n\r\n        $container.jstree(treeOptions);\r\n    }\r\n\r\n    initFacetedSearch() {\r\n        const $productListingContainer = $('#product-listing-container');\r\n        const $facetedSearchContainer = $('#faceted-search-container');\r\n        const $searchHeading = $('#search-results-heading');\r\n        const $searchCount = $('#search-results-product-count');\r\n        const productsPerPage = this.context.searchProductsPerPage;\r\n        const requestOptions = {\r\n            template: {\r\n                productListing: 'search/product-listing',\r\n                sidebar: 'search/sidebar',\r\n                heading: 'search/heading',\r\n                productCount: 'search/product-count',\r\n            },\r\n            config: {\r\n                product_results: {\r\n                    limit: productsPerPage,\r\n                },\r\n            },\r\n            showMore: 'search/show-more',\r\n        };\r\n\r\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\r\n            $productListingContainer.html(content.productListing);\r\n            $facetedSearchContainer.html(content.sidebar);\r\n            $searchHeading.html(content.heading);\r\n            $searchCount.html(content.productCount);\r\n\r\n            $('html, body').animate({\r\n                scrollTop: 0,\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    initValidation($form) {\r\n        this.$form = $form;\r\n        this.validator = nod({\r\n            submit: $form,\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    bindValidation($element) {\r\n        if (this.validator) {\r\n            this.validator.add({\r\n                selector: $element,\r\n                validate: 'presence',\r\n                errorMessage: $element.data('errorMessage'),\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    check() {\r\n        if (this.validator) {\r\n            this.validator.performCheck();\r\n            return this.validator.areAll('valid');\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","const forms = {\r\n    email(value) {\r\n        const re = /^.+@.+\\..+/;\r\n        return re.test(value);\r\n    },\r\n\r\n    /**\r\n     * Validates a password field\r\n     * @param value\r\n     * @returns {boolean}\r\n     */\r\n    password(value) {\r\n        return this.notEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * validates if a field is empty\r\n     * @param value\r\n     * @returns {boolean}\r\n     *\r\n     */\r\n    notEmpty(value) {\r\n        return value.length > 0;\r\n    },\r\n};\r\n\r\nexport default forms;\r\n","import _ from 'lodash';\r\nimport nod from './nod';\r\nimport forms from './models/forms';\r\n\r\nconst inputTagNames = [\r\n    'input',\r\n    'select',\r\n    'textarea',\r\n];\r\n\r\n/**\r\n * Apply class name to an input element on its type\r\n * @param {object} input\r\n * @param {string} formFieldClass\r\n * @return {object} Element itself\r\n */\r\nfunction classifyInput(input, formFieldClass) {\r\n    const $input = $(input);\r\n    const $formField = $input.parent(`.${formFieldClass}`);\r\n    const tagName = $input.prop('tagName').toLowerCase();\r\n\r\n    let className = `${formFieldClass}--${tagName}`;\r\n    let specificClassName;\r\n\r\n    // Input can be text/checkbox/radio etc...\r\n    if (tagName === 'input') {\r\n        const inputType = $input.prop('type');\r\n\r\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\r\n            // ie: .form-field--checkbox, .form-field--radio\r\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\r\n        } else {\r\n            // ie: .form-field--input .form-field--inputText\r\n            specificClassName = `${className}${_.capitalize(inputType)}`;\r\n        }\r\n    }\r\n\r\n    // Apply class modifier\r\n    return $formField\r\n        .addClass(className)\r\n        .addClass(specificClassName);\r\n}\r\n\r\n/**\r\n * Apply class name to each input element in a form based on its type\r\n * @example\r\n * // Before\r\n * <form id=\"form\">\r\n *     <div class=\"form-field\">\r\n *         <input type=\"text\">\r\n *     </div>\r\n *     <div class=\"form-field\">\r\n *         <select>...</select>\r\n *     </div>\r\n * </form>\r\n *\r\n * classifyForm('#form', { formFieldClass: 'form-field' });\r\n *\r\n * // After\r\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\r\n * <div class=\"form-field form-field--select\">...</div>\r\n *\r\n * @param {string|object} formSelector - selector or element\r\n * @param {object} options\r\n * @return {jQuery} Element itself\r\n */\r\nexport function classifyForm(formSelector, options = {}) {\r\n    const $form = $(formSelector);\r\n    const $inputs = $form.find(inputTagNames.join(', '));\r\n\r\n    // Obtain options\r\n    const { formFieldClass = 'form-field' } = options;\r\n\r\n    // Classify each input in a form\r\n    $inputs.each((__, input) => {\r\n        classifyInput(input, formFieldClass);\r\n    });\r\n\r\n    return $form;\r\n}\r\n\r\n/**\r\n * Get id from given field\r\n * @param {object} $field JQuery field object\r\n * @return {string}\r\n */\r\nfunction getFieldId($field) {\r\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\r\n\r\n    if (fieldId && fieldId.length !== 0) {\r\n        return fieldId[0];\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\n/**\r\n * Insert hidden field after State/Province field\r\n * @param {object} $stateField JQuery field object\r\n */\r\nfunction insertStateHiddenField($stateField) {\r\n    const fieldId = getFieldId($stateField);\r\n    const stateFieldAttrs = {\r\n        type: 'hidden',\r\n        name: `FormFieldIsText${fieldId}`,\r\n        value: '1',\r\n    };\r\n\r\n    $stateField.after($('<input />', stateFieldAttrs));\r\n}\r\n\r\nconst Validators = {\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setEmailValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: (cb, val) => {\r\n                    const result = forms.email(val);\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a valid email.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param validator\r\n     * @param passwordSelector\r\n     * @param password2Selector\r\n     * @param requirements\r\n     * @param isOptional\r\n     */\r\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\r\n        const $password = $(passwordSelector);\r\n        const passwordValidations = [\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: passwordSelector,\r\n                validate: (cb, val) => {\r\n                    const result = val.match(new RegExp(requirements.alpha))\r\n                        && val.match(new RegExp(requirements.numeric))\r\n                        && val.length >= requirements.minlength;\r\n\r\n                    // If optional and nothing entered, it is valid\r\n                    if (isOptional && val.length === 0) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: requirements.error,\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val.length;\r\n\r\n                    if (isOptional) {\r\n                        return cb(true);\r\n                    }\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'You must enter a password.',\r\n            },\r\n            {\r\n                selector: password2Selector,\r\n                validate: (cb, val) => {\r\n                    const result = val === $password.val();\r\n\r\n                    cb(result);\r\n                },\r\n                errorMessage: 'Your passwords do not match.',\r\n            },\r\n        ];\r\n\r\n        validator.add(passwordValidations);\r\n    },\r\n\r\n    /**\r\n     * Validate password fields\r\n     * @param {Nod} validator\r\n     * @param {Object} selectors\r\n     * @param {string} selectors.errorSelector\r\n     * @param {string} selectors.fieldsetSelector\r\n     * @param {string} selectors.formSelector\r\n     * @param {string} selectors.maxPriceSelector\r\n     * @param {string} selectors.minPriceSelector\r\n     */\r\n    setMinMaxPriceValidation: (validator, selectors) => {\r\n        const {\r\n            errorSelector,\r\n            fieldsetSelector,\r\n            formSelector,\r\n            maxPriceSelector,\r\n            minPriceSelector,\r\n        } = selectors;\r\n\r\n        validator.configure({\r\n            form: formSelector,\r\n            preventSubmit: true,\r\n            successClass: '_', // KLUDGE: Don't apply success class\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: minPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min price must be less than max. price.',\r\n            selector: maxPriceSelector,\r\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Max. price is required.',\r\n            selector: maxPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Min. price is required.',\r\n            selector: minPriceSelector,\r\n            validate: 'presence',\r\n        });\r\n\r\n        validator.add({\r\n            errorMessage: 'Input must be greater than 0.',\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            validate: 'min-number:0',\r\n        });\r\n\r\n        validator.setMessageOptions({\r\n            selector: [minPriceSelector, maxPriceSelector],\r\n            parent: fieldsetSelector,\r\n            errorSpan: errorSelector,\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets up a new validation when the form is dirty\r\n     * @param validator\r\n     * @param field\r\n     */\r\n    setStateCountryValidation: (validator, field) => {\r\n        if (field) {\r\n            validator.add({\r\n                selector: field,\r\n                validate: 'presence',\r\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Removes classes from dirty form if previously checked\r\n     * @param field\r\n     */\r\n    cleanUpStateValidation: (field) => {\r\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\r\n\r\n        Object.keys(nod.classes).forEach((value) => {\r\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\r\n                $fieldClassElement.removeClass(nod.classes[value]);\r\n            }\r\n        });\r\n    },\r\n};\r\n\r\nexport { Validators, insertStateHiddenField };\r\n","import Url from 'url';\r\n\r\nconst urlUtils = {\r\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\r\n\r\n    goToUrl: (url) => {\r\n        window.history.pushState({}, document.title, url);\r\n        $(window).trigger('statechange');\r\n    },\r\n\r\n    replaceParams: (url, params) => {\r\n        const parsed = Url.parse(url, true);\r\n        let param;\r\n\r\n        // Let the formatter use the query object to build the new url\r\n        parsed.search = null;\r\n\r\n        for (param in params) {\r\n            if (params.hasOwnProperty(param)) {\r\n                parsed.query[param] = params[param];\r\n            }\r\n        }\r\n\r\n        return Url.format(parsed);\r\n    },\r\n\r\n    buildQueryString: (queryData) => {\r\n        let out = '';\r\n        let key;\r\n        for (key in queryData) {\r\n            if (queryData.hasOwnProperty(key)) {\r\n                if (Array.isArray(queryData[key])) {\r\n                    let ndx;\r\n\r\n                    for (ndx in queryData[key]) {\r\n                        if (queryData[key].hasOwnProperty(ndx)) {\r\n                            out += `&${key}=${queryData[key][ndx]}`;\r\n                        }\r\n                    }\r\n                } else {\r\n                    out += `&${key}=${queryData[key]}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        return out.substring(1);\r\n    },\r\n};\r\n\r\nexport default urlUtils;\r\n","import _ from 'lodash';\r\nimport { showAlertModal } from './modal';\r\n\r\nfunction decrementCounter(counter, item) {\r\n    const index = counter.indexOf(item);\r\n\r\n    if (index > -1) {\r\n        counter.splice(index, 1);\r\n    }\r\n}\r\n\r\nfunction incrementCounter(counter, item) {\r\n    counter.push(item);\r\n}\r\n\r\nfunction updateCounterNav(counter, $link, urlContext) {\r\n    if (counter.length !== 0) {\r\n        if (!$link.is('visible')) {\r\n            $link.addClass('show');\r\n        }\r\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\r\n        $link.find('span.countPill').html(counter.length);\r\n    } else {\r\n        $link.removeClass('show');\r\n    }\r\n}\r\n\r\nexport default function (urlContext) {\r\n    let products;\r\n\r\n    const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n    const $compareLink = $('a[data-compare-nav]');\r\n\r\n    if ($checked.length !== 0) {\r\n        products = _.map($checked, element => element.value);\r\n\r\n        updateCounterNav(products, $compareLink, urlContext);\r\n    }\r\n\r\n    const compareCounter = products || [];\r\n\r\n    $('body').on('click', '[data-compare-id]', event => {\r\n        const product = event.currentTarget.value;\r\n        const $clickedCompareLink = $('a[data-compare-nav]');\r\n\r\n        if (event.currentTarget.checked) {\r\n            incrementCounter(compareCounter, product);\r\n        } else {\r\n            decrementCounter(compareCounter, product);\r\n        }\r\n\r\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\r\n    });\r\n\r\n    $('body').on('submit', '[data-product-compare]', event => {\r\n        const $this = $(event.currentTarget);\r\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if (productsToCompare.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            event.preventDefault();\r\n        }\r\n    });\r\n\r\n    $('body').on('click', 'a[data-compare-nav]', () => {\r\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\r\n\r\n        if ($clickedCheckedInput.length <= 1) {\r\n            showAlertModal('You must select at least two products to compare');\r\n            return false;\r\n        }\r\n    });\r\n}\r\n","import PageManager from './page-manager';\r\nimport urlUtils from './common/url-utils';\r\nimport Url from 'url';\r\n\r\nexport default class CatalogPage extends PageManager {\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\r\n    }\r\n}\r\n","import { hooks, api } from '@bigcommerce/stencil-utils';\r\nimport _ from 'lodash';\r\nimport Url from 'url';\r\nimport urlUtils from './url-utils';\r\nimport modalFactory from '../global/modal';\r\nimport collapsibleFactory from './collapsible';\r\nimport { Validators } from './form-utils';\r\nimport nod from './nod';\r\n\r\n/**\r\n * Faceted search view component\r\n */\r\nclass FacetedSearch {\r\n    /**\r\n     * @param {object} requestOptions - Object with options for the ajax requests\r\n     * @param {function} callback - Function to execute after fetching templates\r\n     * @param {object} options - Configurable options\r\n     * @example\r\n     *\r\n     * let requestOptions = {\r\n     *      templates: {\r\n     *          productListing: 'category/product-listing',\r\n     *          sidebar: 'category/sidebar'\r\n     *     }\r\n     * };\r\n     *\r\n     * let templatesDidLoad = function(content) {\r\n     *     $productListingContainer.html(content.productListing);\r\n     *     $facetedSearchContainer.html(content.sidebar);\r\n     * };\r\n     *\r\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\r\n     */\r\n    constructor(requestOptions, callback, options) {\r\n        const defaultOptions = {\r\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\r\n            blockerSelector: '#facetedSearch .blocker',\r\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\r\n            componentSelector: '#facetedSearch-navList',\r\n            facetNavListSelector: '#facetedSearch .navList',\r\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\r\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\r\n            priceRangeFormSelector: '#facet-range-form',\r\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\r\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\r\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\r\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\r\n            modal: modalFactory('#modal')[0],\r\n            modalOpen: false,\r\n        };\r\n\r\n        // Private properties\r\n        this.requestOptions = requestOptions;\r\n        this.callback = callback;\r\n        this.options = _.extend({}, defaultOptions, options);\r\n        this.collapsedFacets = [];\r\n        this.collapsedFacetItems = [];\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Show limited items by default\r\n        $(this.options.facetNavListSelector).each((index, navList) => {\r\n            this.collapseFacetItems($(navList));\r\n        });\r\n\r\n        // Mark initially collapsed accordions\r\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n            if (collapsible.isCollapsed) {\r\n                this.collapsedFacets.push(collapsible.targetId);\r\n            }\r\n        });\r\n\r\n        // Collapse all facets if initially hidden\r\n        // NOTE: Need to execute after Collapsible gets bootstrapped\r\n        setTimeout(() => {\r\n            if ($(this.options.componentSelector).is(':hidden')) {\r\n                this.collapseAllFacets();\r\n            }\r\n        });\r\n\r\n        // Observe user events\r\n        this.onStateChange = this.onStateChange.bind(this);\r\n        this.onToggleClick = this.onToggleClick.bind(this);\r\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\r\n        this.onClearFacet = this.onClearFacet.bind(this);\r\n        this.onFacetClick = this.onFacetClick.bind(this);\r\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\r\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\r\n        this.filterFacetItems = this.filterFacetItems.bind(this);\r\n\r\n        this.bindEvents();\r\n    }\r\n\r\n    // Public methods\r\n    refreshView(content) {\r\n        if (content) {\r\n            this.callback(content);\r\n        }\r\n\r\n        // Init collapsibles\r\n        collapsibleFactory();\r\n\r\n        // Init price validator\r\n        this.initPriceValidator();\r\n\r\n        // Restore view state\r\n        this.restoreCollapsedFacets();\r\n        this.restoreCollapsedFacetItems();\r\n\r\n        // Bind events\r\n        this.bindEvents();\r\n    }\r\n\r\n    updateView() {\r\n        $(this.options.blockerSelector).show();\r\n\r\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\r\n            $(this.options.blockerSelector).hide();\r\n\r\n            if (err) {\r\n                throw new Error(err);\r\n            }\r\n\r\n            // Refresh view with new content\r\n            this.refreshView(content);\r\n        });\r\n    }\r\n\r\n    expandFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Remove\r\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n    }\r\n\r\n    collapseFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n        const hasMoreResults = $navList.data('hasMoreResults');\r\n\r\n        if (hasMoreResults) {\r\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\r\n        } else {\r\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\r\n        }\r\n    }\r\n\r\n    toggleFacetItems($navList) {\r\n        const id = $navList.attr('id');\r\n\r\n        // Toggle depending on `collapsed` flag\r\n        if (_.includes(this.collapsedFacetItems, id)) {\r\n            this.getMoreFacetResults($navList);\r\n\r\n            return true;\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    getMoreFacetResults($navList) {\r\n        const facet = $navList.data('facet');\r\n        const facetUrl = urlUtils.getUrl();\r\n\r\n        if (this.requestOptions.showMore) {\r\n            api.getPage(facetUrl, {\r\n                template: this.requestOptions.showMore,\r\n                params: {\r\n                    list_all: facet,\r\n                },\r\n            }, (err, response) => {\r\n                if (err) {\r\n                    throw new Error(err);\r\n                }\r\n\r\n                this.options.modal.open();\r\n                this.options.modalOpen = true;\r\n                this.options.modal.updateContent(response);\r\n            });\r\n        }\r\n\r\n        this.collapseFacetItems($navList);\r\n\r\n        return false;\r\n    }\r\n\r\n    filterFacetItems(event) {\r\n        const $items = $('.navList-item');\r\n        const query = $(event.currentTarget).val().toLowerCase();\r\n\r\n        $items.each((index, element) => {\r\n            const text = $(element).text().toLowerCase();\r\n            if (text.indexOf(query) !== -1) {\r\n                $(element).show();\r\n            } else {\r\n                $(element).hide();\r\n            }\r\n        });\r\n    }\r\n\r\n    expandFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.open();\r\n    }\r\n\r\n    collapseFacet($accordionToggle) {\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n\r\n        collapsible.close();\r\n    }\r\n\r\n    collapseAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.collapseFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    expandAllFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n\r\n            this.expandFacet($accordionToggle);\r\n        });\r\n    }\r\n\r\n    // Private methods\r\n    initPriceValidator() {\r\n        if ($(this.options.priceRangeFormSelector).length === 0) {\r\n            return;\r\n        }\r\n\r\n        const validator = nod();\r\n        const selectors = {\r\n            errorSelector: this.options.priceRangeErrorSelector,\r\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\r\n            formSelector: this.options.priceRangeFormSelector,\r\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\r\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\r\n        };\r\n\r\n        Validators.setMinMaxPriceValidation(validator, selectors);\r\n\r\n        this.priceRangeValidator = validator;\r\n    }\r\n\r\n    restoreCollapsedFacetItems() {\r\n        const $navLists = $(this.options.facetNavListSelector);\r\n\r\n        // Restore collapsed state for each facet\r\n        $navLists.each((index, navList) => {\r\n            const $navList = $(navList);\r\n            const id = $navList.attr('id');\r\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacetItems($navList);\r\n            } else {\r\n                this.expandFacetItems($navList);\r\n            }\r\n        });\r\n    }\r\n\r\n    restoreCollapsedFacets() {\r\n        const $accordionToggles = $(this.options.accordionToggleSelector);\r\n\r\n        $accordionToggles.each((index, accordionToggle) => {\r\n            const $accordionToggle = $(accordionToggle);\r\n            const collapsible = $accordionToggle.data('collapsibleInstance');\r\n            const id = collapsible.targetId;\r\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\r\n\r\n            if (shouldCollapse) {\r\n                this.collapseFacet($accordionToggle);\r\n            } else {\r\n                this.expandFacet($accordionToggle);\r\n            }\r\n        });\r\n    }\r\n\r\n    bindEvents() {\r\n        // Clean-up\r\n        this.unbindEvents();\r\n\r\n        // DOM events\r\n        $(window).on('statechange', this.onStateChange);\r\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    unbindEvents() {\r\n        // DOM events\r\n        $(window).off('statechange', this.onStateChange);\r\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\r\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\r\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\r\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\r\n\r\n        // Hooks\r\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\r\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\r\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\r\n    }\r\n\r\n    onClearFacet(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n    }\r\n\r\n    onToggleClick(event) {\r\n        const $toggle = $(event.currentTarget);\r\n        const $navList = $($toggle.attr('href'));\r\n\r\n        // Prevent default\r\n        event.preventDefault();\r\n\r\n        // Toggle visible items\r\n        this.toggleFacetItems($navList);\r\n    }\r\n\r\n    onFacetClick(event) {\r\n        const $link = $(event.currentTarget);\r\n        const url = $link.attr('href');\r\n\r\n        event.preventDefault();\r\n\r\n        $link.toggleClass('is-selected');\r\n\r\n        // Update URL\r\n        urlUtils.goToUrl(url);\r\n\r\n        if (this.options.modalOpen) {\r\n            this.options.modal.close();\r\n        }\r\n    }\r\n\r\n    onSortBySubmit(event) {\r\n        const url = Url.parse(window.location.href, true);\r\n        const queryParams = $(event.currentTarget).serialize().split('=');\r\n\r\n        url.query[queryParams[0]] = queryParams[1];\r\n        delete url.query.page;\r\n\r\n        event.preventDefault();\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) }));\r\n    }\r\n\r\n    onRangeSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\r\n            return;\r\n        }\r\n\r\n        const url = Url.parse(window.location.href);\r\n        const queryParams = decodeURI($(event.currentTarget).serialize());\r\n\r\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: `?${queryParams}` }));\r\n    }\r\n\r\n    onStateChange() {\r\n        this.updateView();\r\n    }\r\n\r\n    onAccordionToggle(event) {\r\n        const $accordionToggle = $(event.currentTarget);\r\n        const collapsible = $accordionToggle.data('collapsibleInstance');\r\n        const id = collapsible.targetId;\r\n\r\n        if (collapsible.isCollapsed) {\r\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\r\n        } else {\r\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\r\n        }\r\n    }\r\n}\r\n\r\nexport default FacetedSearch;\r\n"],"sourceRoot":""}